0*NA
se <- c(0,se)
mm$Em2lb <- mm$Em2 - 1.96 * se
mm$Em2ub <- mm$Em2 + 1.96 * se
mm
ay <- ggplot(mm, aes(cohort_year, meancond))
ay <- ay + geom_text(aes(x = cohort_year, y = 1.5, label = paste('n = ',ncond, sep = ''), angle = 90), size = 3, hjust = 0.5)
ay <- ay + geom_ribbon(data = mm, aes(ymin = Em12lb, ymax = Em12ub), alpha = 0.2, fill = mypalette[1])
ay <- ay + geom_point(aes(x = cohort_year, y = Em2), col = mypalette[1], pch = 16, size = 1.3)
mypalette <- c(brewer.pal(4,"Set1"))
ay <- ggplot(mm, aes(cohort_year, meancond))
ay <- ay + geom_text(aes(x = cohort_year, y = 1.5, label = paste('n = ',ncond, sep = ''), angle = 90), size = 3, hjust = 0.5)
ay <- ay + geom_ribbon(data = mm, aes(ymin = Em12lb, ymax = Em12ub), alpha = 0.2, fill = mypalette[1])
ay <- ay + geom_ribbon(data = mm, aes(ymin = Em7lb, ymax = Em7ub), alpha = 0.2, fill = mypalette[3])
ay <- ay + geom_ribbon(data = mm, aes(ymin = Em8lb, ymax = Em8ub), alpha = 0.2, fill =  mypalette[2])
ay <- ay + geom_point(aes(x = cohort_year, y = Em8), col =  mypalette[2], pch = 16, size = 0.6)
ay <- ay + geom_point(aes(x = cohort_year, y = Em7), col = mypalette[3], pch = 16, size = .6)
ay <- ay + geom_point(aes(x = cohort_year, y = Em12), col = mypalette[1], pch = 16, size = .6)
ay <- ay + geom_point(aes(x = cohort_year, y = Em2), col = mypalette[1], pch = 16, size = 1.3)
ay <- ay + geom_line(aes(cohort_year, Em12), colour = mypalette[1])
ay <- ay + geom_line(aes(cohort_year, Em7), colour = mypalette[3])
ay <- ay + geom_line(aes(cohort_year, Em8), colour =  mypalette[2])
ay <- ay + geom_point()
ay <- ay + geom_linerange(aes(ymin = lcc, ymax = ucc))
ay <- ay + theme_set(theme_cowplot())
ay <- ay + labs(x = 'Year', y = 'Condition')
ay <- ay + annotate("text", x = 1997, y = 0.65, label = "condition ~ gam(smooth(ice.1y.jan)", hjust = 0, size = 2)
ay <- ay + annotate("text", x = 1997, y = 0.7, label = "condition ~ gam(smooth(ice.1y.jan) + smooth(ArcCodt1)", hjust = 0, size = 2)
ay <- ay + annotate("text", x = 1997, y = 0.75, label = "condition ~ gam(smooth(ice.1y.jan) + smooth(Capt1)", hjust = 0, size = 2)
ay <- ay + annotate("segment", x = 1996, xend = 1996.8, y = 0.65, yend = 0.65, colour = mypalette[1])
ay <- ay + annotate("segment", x = 1996, xend = 1996.8, y = 0.7, yend = 0.7, colour = mypalette[3])
ay <- ay + annotate("segment", x = 1996, xend = 1996.8, y = 0.75, yend = 0.75, colour =  mypalette[2])
ay
ay <- ggplot(mm, aes(cohort_year, meancond))
ay <- ay + geom_text(aes(x = cohort_year, y = 1.5, label = paste('n = ',ncond, sep = ''), angle = 90), size = 3, hjust = 0.5)
ay <- ay + geom_ribbon(data = mm, aes(ymin = Em2lb, ymax = Em2ub), alpha = 0.2, fill = mypalette[1])
ay
ay <- ay + geom_point(aes(x = cohort_year, y = Em2), col = mypalette[1], pch = 16, size = 1.3)
ay
ay <- ay + geom_line(aes(cohort_year, Em2), colour = mypalette[1])
ay <- ay + geom_point()
ay <- ay + geom_linerange(aes(ymin = lcc, ymax = ucc))
ay <- ay + theme_set(theme_cowplot())
ay <- ay + labs(x = 'Year', y = 'Condition')
ay
se <- predict( m1 , se = TRUE)$se.fit
mm$Em1lb <- mm$Em1 - 1.96 * se
mm$Em1ub <- mm$Em1 + 1.96 * se
mm
summary(m3)
fecun
meancond <- merge(meancond, diet, all = T)
## load libraries ----
#library(ggplot2)
library(lubridate)
library(dplyr)
library(tidyr)
library(cowplot)
library(MuMIn)
library(betareg)
library(mgcv)
## read data ----
setwd('D:/Buren_files/GitHub/PG_Growth/')
source("functions/HighstatLibV7.R")
source('functions/panelcor.r')
source("functions/MCMCSupportHighstatV2.R")
capelin <- read.csv('data/capelin_acoustic.csv')
names(capelin) <- c('cohort_year', 'capbiomass')
fecun <- read.csv('data/fecundity_2014-feb20.csv', header = T)
load('Rdata/adf.Rdata')
load('Rdata/diet.Rdata')
## lag
fecun$Capt1<-c(NA,fecun$Cap[1:(length(fecun$Cap)-1)])
fecun$Capt2<-c(NA,NA,fecun$Cap[1:(length(fecun$Cap)-2)])
fecun$ArcCodt1<-c(NA,fecun$ArcCod[1:(length(fecun$ArcCod)-1)])
fecun$ArcCodt2<-c(NA,NA,fecun$ArcCod[1:(length(fecun$ArcCod)-2)])
fecun$Sandt1<-c(NA,fecun$Sand[1:(length(fecun$Sand)-1)])
fecun$Sandt2<-c(NA,NA,fecun$Sand[1:(length(fecun$Sand)-2)])
## bootstrap condition data by cohort year ----
bootcond <- data.frame(cohort_year = sort(unique(adf$cohyear)), lcc = rep(NA, length(unique(adf$cohyear))), ucc = rep(NA, length(unique(adf$cohyear))))
for (i in sort(unique(adf$cohyear))) {
dd <- quantile(base::sample(adf$relcond[which(adf$cohyear == i)], size = 100000, replace = T), c(0.025, 0.975))
bootcond[which(bootcond$cohort_year == i), 'lcc'] <- dd[1]
bootcond[which(bootcond$cohort_year == i), 'ucc'] <- dd[2]
}
rm(i)
## calculate mean relative condition by cohort year ----
meancond <- adf %>%
group_by(cohyear) %>%
summarize(meanc = mean(relcond))
names(meancond) <- c('cohort_year', 'meancond')
meancond$cohort_year <- as.integer(meancond$cohort_year)
ncond <- adf %>%
group_by(cohyear) %>%
group_size()
meancond <- cbind(meancond, ncond)
rm(ncond)
meancond[which(meancond$ncond < 20), 'meancond'] <- NA
## merge mean condition and CIs  ----
meancond <- merge(meancond, bootcond)
# for those years when meancond = NA, make lcc and ucc = NA
meancond[which(is.na(meancond$meancond)),c('lcc', 'ucc')] <- NA
rm(bootcond)
#meancond <- merge(meancond, capelin, all = T)
## filter diet data ----
prey <- c('arctic cod', 'capelin', 'mysid')
diet <- percbio %>%
select(preycat, year, percbio) %>%
filter(preycat %in% prey) %>%
spread(preycat, percbio)
names(diet) <- c('cohort_year', 'darcticcod', 'dcapelin', 'dmysid')
## merge mean condition and diet  ----
meancond <- merge(meancond, diet, all = T)
rm(prey)
## merge with ice data ----
merge(meancond, fecun[,c('cohort_year', 'ice.1y.jan')], all = T)
meancond
meancond <- merge(meancond, fecun[,c('cohort_year', 'ice.1y.jan')], all = T)
meancond
m2 <- gam(meancond ~ te(darcticcod, ice.1y.jan) , data = mm)
mm <- meancond %>%
filter(complete.cases(meancond))
pairs(c(mm[,c('meancond','darcticcod', 'dcapelin', 'dmysid', 'ice.1y.jan')]),upper.panel=points, lower.panel=panelcor,diag.panel=panel.hist)
.
m2 <- gam(meancond ~ te(darcticcod, ice.1y.jan) , data = mm)
m2 <- gam(meancond ~ s(darcticcod) + s(ice.1y.jan, k =6) , data = mm)
m3 <- gam(meancond ~ te(dmysid) , data = mm)
m2 <- gam(meancond ~ s(darcticcod) + s(ice.1y.jan, k = 5) , data = mm)
mm$Em1 <- predict(m1, newdata = mm)
mm$Em2 <- predict(m2, newdata = mm)
mm$Em3 <- predict(m3, newdata = mm)
mm$Em4 <- predict(m4, newdata = mm)
mm$Em5 <- predict(m5, newdata = mm)
mm$Em7 <- predict(m7, newdata = mm)
mm$Em8 <- predict(m8, newdata = mm)
mm$Em12 <- predict(m12, newdata
se <- predict( m2 , se = TRUE)$se.fit
se <- c(0,se)
mm$Em2lb <- mm$Em2 - 1.96 * se
se <- predict( m2 , se = TRUE)$se.fit
mm$Em2lb <- mm$Em2 - 1.96 * se
mm$Em2ub <- mm$Em2 + 1.96 * se
ay <- ggplot(mm, aes(cohort_year, meancond))
ay <- ay + geom_text(aes(x = cohort_year, y = 1.5, label = paste('n = ',ncond, sep = ''), angle = 90), size = 3, hjust = 0.5)
ay <- ay + geom_point(aes(x = cohort_year, y = Em2), col = mypalette[1], pch = 16, size = 1.3)
ay <- ay + geom_line(aes(cohort_year, Em2), colour = mypalette[1])
ay <- ay + geom_point()
ay <- ay + geom_linerange(aes(ymin = lcc, ymax = ucc))
ay <- ay + theme_set(theme_cowplot())
ay <- ay + labs(x = 'Year', y = 'Condition')
ay
m4 <- gam(meancond ~ te(darcticcod)  + ice.1y.jan, data = mm)
summary(m2)
summary(m4)
m2 <- gam(meancond ~ s(darcticcod)  , data = mm)
m12 <- gam(meancond ~ s(ice.1y.jan), data = mm)
m1 <- gam(meancond ~ te(dcapelin) , data = mm)
m2 <- gam(meancond ~ s(darcticcod) + s(ice.1y.jan, k = 5) , data = mm)
m3 <- gam(meancond ~ te(dmysid) , data = mm)
m4 <- gam(meancond ~ te(darcticcod)  + ice.1y.jan, data = mm)
m5 <- gam(meancond ~ s(darcticcod)  , data = mm)
m12 <- gam(meancond ~ s(ice.1y.jan), data = mm)
summary(m1)
summary(m2)
summary(m5)
summary(m12)
library(scales)
library(dplyr)
data$doy <- yday(data$dates)
#data$doy <- ifelse(data$doy > 270, data$doy - 366, data$doy)
gamdata <- na.omit(data[,c('idsex', 'weight', 'ageclass', 'doy', 'sex','year','month', 'mdates', 'trueage')])
gamdata <- gamdata[which(!(gamdata$ageclass == '0' & gamdata$weight > 100)),]
gamdata <- gamdata[which(!(gamdata$ageclass == '1' & gamdata$weight > 120)),]
gamdata <- gamdata[which(!(gamdata$ageclass == '2' & gamdata$weight > 120)),]
gamdata <- gamdata[which(!(gamdata$ageclass == '3' & gamdata$weight > 150)),]
gamdatayoy <- gamdata[which(gamdata$ageclass == '0'),]
juv <- 1:4
ad <- c(5:7, '8+')
gamdatajuv <- gamdata[which(gamdata$ageclass %in% juv),]
gamdataad <- gamdata[which(gamdata$ageclass %in% ad),]
gamdata$stage <- ifelse(gamdata$trueage < 5, 'J','A')
gamdata$stage <- ifelse(gamdata$trueage == 0, 'YOY', gamdata$stage)
# gamdata$age <- gamdata$ageclass
# gamdata[which(gamdata$age == '8+'), 'age'] <- 10
# gamdata$age <- as.numeric(gamdata$age)
library(mgcv)
mygamyoy <- gam(weight ~  s(doy,  bs = "cc" ), family = gaussian, data = gamdatayoy)
lmyoy <- lm(weight ~ doy, data = gamdatayoy)
mygamjuv <- gam(weight ~  s(doy,  bs = "cc" ) + as.factor(ageclass), family = gaussian, data = gamdatajuv)
mygamad <- gam(weight ~  s(doy,  bs = "cc" ) + as.factor(ageclass), family = gaussian, data = gamdataad)
# mygam1 <- gam(weight ~  s(doy,  bs = "cc" ) + s(doy, by =  trueage,  bs = "cc"), family = gaussian, data = gamdata)
# mygam12 <- gam(weight ~  te(doy,  trueage, bs = "cc" ), family = gaussian, data = gamdata)
# mygam2 <- gam(weight ~  s(doy,  bs = "cc" ) + as.factor(ageclass), family = gaussian, data = gamdata)
#
# mygam3 <- gam(weight ~  s(doy,  bs = "cc" ) + as.factor(stage), family = gaussian, data = gamdata)
pdatyoy <- expand.grid(doy = min(gamdatayoy$doy):max(gamdatayoy$doy), ageclass = as.factor(unique(gamdatayoy$ageclass)))
pdatjuv <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), ageclass = as.factor(unique(gamdatajuv$ageclass)))
pdatad <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), ageclass = as.factor(unique(gamdataad$ageclass)))
pdatyoy$pred  <-  predict(mygamyoy,  newdata = pdatyoy, type = "response", se.fit = TRUE)[[1]]
pdatjuv$pred  <-  predict(mygamjuv,  newdata = pdatjuv, type = "response", se.fit = TRUE)[[1]]
pdatad$pred   <-  predict(mygamad,   newdata = pdatad , type = "response", se.fit = TRUE)[[1]]
#pdat$pred3  <-  predict(mygam3,  newdata = pdat, type = "response", se.fit = TRUE)[[1]]
pdat <- rbind(pdatyoy,pdatjuv, pdatad)
pdat <- (merge(pdat,unique(gamdata[c('doy', 'mdates')])))
datagroup <- data %>%
select(ageclass, month, weight) %>%
group_by(ageclass, month) %>%
filter(complete.cases(ageclass)) %>%
filter(month < 9000) %>%
summarize(mw = mean(weight, na.rm = T))
datagroup$mdates <- (ymd(paste('2800',"-",datagroup$month,"-",15,sep = "")))
for (i in 1:nrow(datagroup)) {
#if(!is.na(datagroup[i, 'dates'])) {
if(datagroup$month[i] > 2) {
datagroup$mdates[i] <- datagroup$mdates[i] - years(1)
# }
}
}
gamdata$decade <- ifelse(gamdata$year < 1990, '1980s',
ifelse(between(gamdata$year, 1990, 1999), '1990s',
ifelse(between(gamdata$year, 2000, 2009), '2000s', '2010s')))
mw <- gamdata %>%
group_by(decade, month, ageclass) %>%
summarize(mw = mean(weight))
mw$mdates <- dmy(paste('15/', mw$month, '/2800'))
for (i in 1:nrow(mw)) {
#if(!is.na(datagroup[i, 'dates'])) {
if(mw$month[i] > 2) {
mw$mdates[i] <- mw$mdates[i] - years(1)
# }
}
}
p <- ggplot(gamdata , aes(mdates, weight, colour = decade) )
p <- p + geom_point(alpha = 0.3)
p <- p + geom_line(data = mw, aes(mdates, mw, colour = decade) )
#p <- p + geom_line(data = pdat, aes(mdates, pred), size = 1.5, col = 'red')
#p <- p + geom_point(data = datagroup, aes(mdates, mw), size = 1.5, col = 'blue')
#p <- p + geom_line(data = pdat, aes(mdates, pred12, col = 'blue'))
#p <- p + theme_bw() + theme(legend.position="none")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + scale_x_date(date_breaks = "1 months",labels = date_format("%b"))
p <- p + xlab("Month")
p <- p + theme_bw() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
p <- p + facet_wrap(~ageclass, ncol = 2)#, scales = "free_y")
print(p)
library(cowplot)
#save_plot("output/weight_gain_by_decade.pdf", p, base_height = 8, base_aspect_ratio = 1.3) # make room for figure legend)
source('D:/Buren_files/GitHub/PG_Growth/code/PG_growth.R', echo=TRUE)
save(data, file = 'Rdata/data.Rdata')
getwd()
load('Rdata/data.Rdata')
data$doy <- yday(data$dates)
source('D:/Buren_files/GitHub/PG_Growth/code/PG_weight_GAM.R', echo=TRUE)
gamdatayoy
source('D:/Buren_files/GitHub/PG_Growth/code/PG_weight_GAM.R', echo=TRUE)
source('D:/Buren_files/GitHub/PG_Growth/code/PG_weight_GAM.R', echo=TRUE)
gamdatayoy
pdatyoy <- expand.grid(doy = min(gamdatayoy$doy):max(gamdatayoy$doy), stage = as.factor(unique(gamdatayoy$stage)))
pdatjuv <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdatajuv$stage)))
pdatad <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdataad$stage)))
pdataad
pdatad
gamdata[1,]
mygam <- gam(weight ~  s(doy,  bs = "cc" ) + decade + stage, family = gaussian, data = gamdata)
plot(mygam)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + decade + stage, family = gaussian, data = gamdatayoy)
source('D:/Buren_files/GitHub/PG_Growth/code/PG_weight_GAM.R', echo=TRUE)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + decade + stage, family = gaussian, data = gamdatayoy)
source('D:/Buren_files/GitHub/PG_Growth/code/PG_weight_GAM.R', echo=TRUE)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + decade + stage, family = gaussian, data = gamdatayoy)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + decade , family = gaussian, data = gamdatayoy)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + decade , family = gaussian, data = gamdatayoy)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + decade , family = gaussian, data = gamdatajuv)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + decade , family = gaussian, data = gamdataad)
plot(mygamyoysd)
plot(mygamasd)
plot(mygamjsd)
mygamsd <- gam(weight ~  te(doy, stage, bs = "cc" ) + decade , family = gaussian, data = gamdatayoy)
mygamsd <- gam(weight ~  te(doy, stage, bs = "cc" ) + decade , family = gaussian, data = gamdata)
?te
mygamsd <- gam(weight ~  te(doy, stage ) + decade , family = gaussian, data = gamdata)
gamdata
str(gamdata)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatayoy)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatajuv)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdataad)
mygamsd <- gam(weight ~  te(doy, stage ) + factor(decade) , family = gaussian, data = gamdata)
mygamsd <- gam(weight ~  te(doy, factor(stage) ) + factor(decade) , family = gaussian, data = gamdata)
mygamsd <- gam(weight ~  te(doy, factor(stage), k =4 ) + factor(decade) , family = gaussian, data = gamdata)
mygamsd <- gam(weight ~  te(doy, factor(stage), k = 3 ) + factor(decade) , family = gaussian, data = gamdata)
pdatyoy <- expand.grid(doy = min(gamdatayoy$doy):max(gamdatayoy$doy), stage = as.factor(unique(gamdatayoy$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatayoy
pdatyoy
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatayoy)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatajuv)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdataad)
pdatyoy <- expand.grid(doy = min(gamdatayoy$doy):max(gamdatayoy$doy), stage = as.factor(unique(gamdatayoy$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatjuv <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdatajuv$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatad <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdataad$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatyoy$pred  <-  predict(mygamyoy,  newdata = pdatyoy, type = "response", se.fit = TRUE)[[1]]
pdatjuv$pred  <-  predict(mygamjuv,  newdata = pdatjuv, type = "response", se.fit = TRUE)[[1]]
pdatad$pred   <-  predict(mygamad,   newdata = pdatad , type = "response", se.fit = TRUE)[[1]]
#pdat$pred3  <-  predict(mygam3,  newdata = pdat, type = "response", se.fit = TRUE)[[1]]
pdat <- rbind(pdatyoy,pdatjuv, pdatad)
pdat <- (merge(pdat,unique(gamdata[c('doy', 'mdates')])))
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatayoy)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatajuv)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdataad)
pdatyoy <- expand.grid(doy = min(gamdatayoy$doy):max(gamdatayoy$doy), stage = as.factor(unique(gamdatayoy$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatjuv <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdatajuv$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatad <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdataad$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatyoy$pred  <-  predict(mygamyoysd,  newdata = pdatyoy, type = "response", se.fit = TRUE)[[1]]
pdatjuv$pred  <-  predict(mygamjsd,  newdata = pdatjuv, type = "response", se.fit = TRUE)[[1]]
pdatad$pred   <-  predict(mygamasd,   newdata = pdatad , type = "response", se.fit = TRUE)[[1]]
pdat <- rbind(pdatyoy,pdatjuv, pdatad)
pdat <- (merge(pdat,unique(gamdata[c('doy', 'mdates')])))
pdat
p <- ggplot(gamdata , aes(mdates, weight, colour = decade) )
p <- p + geom_point(alpha = 0.3)
p <- p + geom_line(data = mw, aes(mdates, mw, colour = decade) )
p <- p + geom_line(data = pdat, aes(mdates, pred, colour = decade))
#p <- p + geom_point(data = datagroup, aes(mdates, mw), size = 1.5, col = 'blue')
#p <- p + geom_line(data = pdat, aes(mdates, pred12, col = 'blue'))
#p <- p + theme_bw() + theme(legend.position="none")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + scale_x_date(date_breaks = "1 months",labels = date_format("%b"))
p <- p + xlab("Month")
p <- p + theme_bw() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
p <- p + facet_wrap(~stage, ncol = 2)#, scales = "free_y")
print(p)
pdat
pdatyoy[1,]
pdatjuv[1,]
pdatad[1,]
pdat[1,]
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatayoy)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatajuv)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdataad)
pdatyoy <- expand.grid(doy = min(gamdatayoy$doy):max(gamdatayoy$doy), stage = as.factor(unique(gamdatayoy$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatjuv <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdatajuv$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatad <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdataad$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatyoy$pred  <-  predict(mygamyoysd,  newdata = pdatyoy, type = "response", se.fit = TRUE)[[1]]
pdatjuv$pred  <-  predict(mygamjsd,  newdata = pdatjuv, type = "response", se.fit = TRUE)[[1]]
pdatad$pred   <-  predict(mygamasd,   newdata = pdatad , type = "response", se.fit = TRUE)[[1]]
#pdat$pred3  <-  predict(mygam3,  newdata = pdat, type = "response", se.fit = TRUE)[[1]]
pdat <- rbind(pdatyoy,pdatjuv, pdatad)
pdat <- (merge(pdat,unique(gamdata[c('doy', 'mdates')])))
p <- ggplot(gamdata , aes(mdates, weight, colour = decade) )
p <- p + geom_point(alpha = 0.3)
p <- p + geom_line(data = mw, aes(mdates, mw, colour = decade) )
p <- p + geom_line(data = pdat, aes(mdates, pred, colour = decade))
#p <- p + geom_point(data = datagroup, aes(mdates, mw), size = 1.5, col = 'blue')
#p <- p + geom_line(data = pdat, aes(mdates, pred12, col = 'blue'))
#p <- p + theme_bw() + theme(legend.position="none")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + scale_x_date(date_breaks = "1 months",labels = date_format("%b"))
p <- p + xlab("Month")
p <- p + theme_bw() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
p <- p + facet_wrap(~stage, ncol = 1)#, scales = "free_y")
print(p)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatayoy)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatajuv)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdataad)
pdatyoy <- expand.grid(doy = min(gamdatayoy$doy):max(gamdatayoy$doy), stage = as.factor(unique(gamdatayoy$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatjuv <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdatajuv$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatad <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdataad$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatyoy$pred  <-  predict(mygamyoysd,  newdata = pdatyoy, type = "response", se.fit = TRUE)[[1]]
pdatjuv$pred  <-  predict(mygamjsd,  newdata = pdatjuv, type = "response", se.fit = TRUE)[[1]]
pdatad$pred   <-  predict(mygamasd,   newdata = pdatad , type = "response", se.fit = TRUE)[[1]]
#pdat$pred3  <-  predict(mygam3,  newdata = pdat, type = "response", se.fit = TRUE)[[1]]
pdatsd <- rbind(pdatyoy,pdatjuv, pdatad)
pdatsd <- (merge(pdatsd,unique(gamdata[c('doy', 'mdates')])))
p <- ggplot(gamdata , aes(mdates, weight, colour = decade) )
p <- p + geom_point(alpha = 0.3)
p <- p + geom_line(data = mw, aes(mdates, mw, colour = decade) )
p <- p + geom_line(data = pdatsd, aes(mdates, pred, colour = decade))
#p <- p + geom_point(data = datagroup, aes(mdates, mw), size = 1.5, col = 'blue')
#p <- p + geom_line(data = pdat, aes(mdates, pred12, col = 'blue'))
#p <- p + theme_bw() + theme(legend.position="none")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + scale_x_date(date_breaks = "1 months",labels = date_format("%b"))
p <- p + xlab("Month")
p <- p + theme_bw() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
p <- p + facet_wrap(~stage, ncol = 1)#, scales = "free_y")
print(p)
pdatsd[which(pdatsd$stage == 'YOY'  & pdat$pred > 100), ]
pdatsd[which(pdatsd$stage == 'YOY'  & pdatsd$pred > 100), ]
p <- ggplot(gamdata , aes(mdates, weight, colour = decade) )
p <- p + geom_point(alpha = 0.3)
#p <- p + geom_line(data = mw, aes(mdates, mw, colour = decade) )
p <- p + geom_line(data = pdatsd, aes(mdates, pred, colour = decade))
#p <- p + geom_point(data = datagroup, aes(mdates, mw), size = 1.5, col = 'blue')
#p <- p + geom_line(data = pdat, aes(mdates, pred12, col = 'blue'))
#p <- p + theme_bw() + theme(legend.position="none")
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + scale_x_date(date_breaks = "1 months",labels = date_format("%b"))
p <- p + xlab("Month")
p <- p + theme_bw() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
p <- p + facet_wrap(~stage, ncol = 1)#, scales = "free_y")
print(p)
mygamasd <- gam(weight ~  te(doy, decade,  bs = "cc" )  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~  te(doy, decade )  , family = gaussian, data = gamdataad)
gamdataad
mygamasd <- gam(weight ~  s(doy, by = decade, bs ='cc' )  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~  decade + s(doy, by = decade, bs ='cc' )  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~  decade , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~  decade + s(doy, bs ='cc', by = decade)  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~  s(doy) + s(doy, bs ='cc', by = decade)  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~  s(decade) + s(doy, bs ='cc', by = decade)  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~  (decade) + s(doy, bs ='cc', by = decade)  , family = gaussian, data = gamdataad)
gamm(weight ~ s(doy, factor(decade), bs="cc"), family = gaussian, data = gamdataad)
gamm(weight ~ s(doy, factor(decade), bs = 'cc', k = 5), family = gaussian, data = gamdataad)
gamm(weight ~ s(doy, factor(stage), bs = 'cc', k = 5), family = gaussian, data = gamdata)
mygamasd <- gam(weight ~  (decade) + ti(doy, decade, bs ='cc')  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~  (decade) + ti(doy, decade)  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~   ti(doy, decade, bs ='cc')  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~   ti(doy) + ti(decade) + ti(doy, decade, bs ='cc')  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~   ti(doy) + ti(decade) + ti(doy, decade)  , family = gaussian, data = gamdataad)
mygamasd <- gam(weight ~   ti(doy) + ti(decade) + ti(doy, decade)  ,  data = gamdataad)
mygamasd <- gam(weight ~   s(doy, decade)  ,  data = gamdataad)
gamdataad
mygamasd <- gam(weight ~   s(doy, stage)  ,  data = gamdata)
mygamasd <- gam(weight ~   s(doy, stage, knots = 25)  ,  data = gamdata)
mygamasd <- gam(weight ~   s(doy, stage, k = 25)  ,  data = gamdata)
mygamasd <- gam(weight ~   te(doy, stage, k = 25)  ,  data = gamdata)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + s(factor(decade)), family = gaussian, data = gamdatajuv)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + s((decade)), family = gaussian, data = gamdatajuv)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdatayoy)
str(gamdataad)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + ((decade)), family = gaussian, data = gamdatajuv)
mygam <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) + factor(stage), family = gaussian, data = gamdata)
plot(mygam)
summary(mygam)
gam.check(mygamyoysd)
gam.check(mygamjuvsd)
gam.check(mygamjsd
)
gam.check(mygamasd
)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family = gaussian, data = gamdataad)
gam.check(mygamasd)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) ,family=Gamma(link=log), data = gamdatayoy)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) ,family=Gamma(link=log), data = gamdatajuv)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family=Gamma(link=log), data = gamdataad)
gam.check(mygamasd)
gam.check(mygamjsd)
gam.check(mygamyoysd)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) ,family=gaussian(link=log), data = gamdatayoy)
gam.check(mygamyoysd)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) ,family=gaussian(link=identity, data = gamdatayoy)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) ,family=gaussian(link=identity), data = gamdatayoy)
dev.new()
gam.check(mygamyoysd)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family=gaussian(link=log), data = gamdataad)
gam.check(mygamasd)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family=gaussian(link=loglog), data = gamdataad)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family=gaussian, data = gamdataad)
gam.check(mygamasd)
plot.gam(mygamasd)
plot(mygamasd)
mygamasd <- gam(weight ~   te(doy, stage, k = 5)  ,  data = gamdata)
mygamyoysd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) ,family=gaussian(link=log), data = gamdatayoy)
mygamjsd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) ,family=Gamma(link=log), data = gamdatajuv)
mygamasd <- gam(weight ~  s(doy,  bs = "cc" ) + factor(decade) , family=gaussian(link=log), data = gamdataad)
pdatyoy <- expand.grid(doy = min(gamdatayoy$doy):max(gamdatayoy$doy), stage = as.factor(unique(gamdatayoy$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatjuv <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdatajuv$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatad <- expand.grid(doy = min(gamdata$doy):max(gamdata$doy), stage = as.factor(unique(gamdataad$stage)), decade = as.factor(unique(gamdatayoy$decade)))
pdatyoy$pred  <-  predict(mygamyoysd,  newdata = pdatyoy, type = "response", se.fit = TRUE)[[1]]
pdatjuv$pred  <-  predict(mygamjsd,  newdata = pdatjuv, type = "response", se.fit = TRUE)[[1]]
pdatad$pred   <-  predict(mygamasd,   newdata = pdatad , type = "response", se.fit = TRUE)[[1]]
pdatsd <- rbind(pdatyoy,pdatjuv, pdatad)
pdatsd <- (merge(pdatsd,unique(gamdata[c('doy', 'mdates')])))
p <- ggplot(gamdata , aes(mdates, weight, colour = decade) )
p <- p + geom_point(alpha = 0.3)
p <- p + geom_line(data = pdatsd, aes(mdates, pred, colour = decade))
p <- p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p <- p + scale_x_date(date_breaks = "1 months",labels = date_format("%b"))
p <- p + xlab("Month")
p <- p + theme_bw() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())
p <- p + facet_wrap(~stage, ncol = 1)#, scales = "free_y")
print(p)
save_plot("output/weight_gain_by_decade_gams.pdf", p, base_height = 8, base_aspect_ratio = 1.3) # make room for figure legend)
getwd()
save_plot("output/weight_gain_by_decade_gams.png", p, base_height = 8, base_aspect_ratio = 1.3) # make room for figure legend)
save_plot("output/weight_gain_by_decade_gams.png", p, base_height = 8, base_width = 6) # make room for figure legend)
save_plot("output/weight_gain_by_decade_gams.png", p, base_height = 8, base_width = 8) # make room for figure legend)
save_plot("output/weight_gain_by_decade_gams.png", p, base_height = 8, base_width = 7) # make room for figure legend)
save_plot("output/weight_gain_by_decade_gams.png", p, base_height = 8, base_width = 8) # make room for figure legend)
source('D:/Buren_files/GitHub/PG_Growth/code/PG_conditionMMS_abortion.R', echo=TRUE)
ca
plotfecun
bestmodel
ca <- ggplot(plotfecun, aes(meancond, abrate))
ca <- ca + ylim(0, 0.6)
ca <- ca + xlim(0.8, 1.2)
ca <- ca + geom_point()
ca <- ca + geom_linerange(data = fecun, aes(x = meancond, y = abrate, ymin = ablb, ymax = abub))
ca <- ca + labs(x = 'Relative condition', y = 'Abortion rate')
ca <- ca + theme_set(theme_cowplot())
ca
ca <- ggplot(plotfecun, aes(meancond, abrate))
ca <- ca + ylim(0, 0.6)
ca <- ca + xlim(0.8, 1.2)
ca <- ca + geom_point()
ca <- ca + geom_linerange(data = plotfecun, aes(x = meancond, y = abrate, ymin = ablb, ymax = abub))
ca <- ca + geom_line(data = plotfecun, aes(x = meancond, y = pred1), col = 'red')
ca <- ca + labs(x = 'Relative condition', y = 'Abortion rate')
ca <- ca + theme_set(theme_cowplot())
ca
ca <- ca + geom_ribbon(data = plotfecun, aes(ymin = pred1lb, ymax = pred1ub), alpha = 0.2, fill = 'red')
ca
save_plot("output/abortion-condition-gam.png", ca, base_aspect_ratio = 1, base_height = 4, base_width = 6)
